let isDarkMode = false;

document.getElementById('editor').addEventListener('input', analyzeText);
document.getElementById('editor').addEventListener('paste', () => {
    setTimeout(analyzeText, 10);
});

// Add event listeners for buttons
document.getElementById('clearBtn').addEventListener('click', clearText);
document.getElementById('copyBtn').addEventListener('click', copyStats);
document.getElementById('darkModeBtn').addEventListener('click', toggleMode);

function analyzeText() {
    const text = document.getElementById('editor').value;

    // Add updating animation
    document.querySelectorAll('.stat-value').forEach(el => {
        el.classList.add('updating');
        setTimeout(() => el.classList.remove('updating'), 300);
    });

    // Basic counts
    const wordCount = text.trim() === '' ? 0 : text.match(/\S+/g)?.length || 0;

    // Improved sentence counting - handles multiple punctuation and abbreviations better
    let sentenceCount = 0;
    if (text.trim() !== '') {
        // Split by sentence-ending punctuation, but be smarter about it
        const sentences = text.split(/[.!?]+/).filter(sentence => {
            const trimmed = sentence.trim();
            // Only count as sentence if it has actual words (not just whitespace or single letters)
            return trimmed.length > 0 && /\w/.test(trimmed);
        });
        sentenceCount = sentences.length;
    }

    const charCountNoSpaces = text.replace(/\s+/g, '').length;
    const charCountSpaces = text.length;
    const paragraphCount = text.trim() === '' ? 0 : text.split(/\n\s*\n/).filter(p => p.trim().length > 0).length;

    // Reading time calculation (200 WPM average)
    const readingTimeMinutes = wordCount / 200;
    const minutes = Math.floor(readingTimeMinutes);
    const seconds = Math.round((readingTimeMinutes - minutes) * 60);
    const readingTimeText = minutes > 0 ? `${minutes}m ${seconds}s` : `${Math.max(1, Math.ceil(wordCount / 200 * 60))}s`;

    // Update display
    document.getElementById('wordCount').textContent = wordCount.toLocaleString();
    document.getElementById('sentenceCount').textContent = sentenceCount.toLocaleString();
    document.getElementById('charCountNoSpaces').textContent = charCountNoSpaces.toLocaleString();
    document.getElementById('charCountSpaces').textContent = charCountSpaces.toLocaleString();
    document.getElementById('paragraphCount').textContent = paragraphCount.toLocaleString();
    document.getElementById('readingTime').textContent = readingTimeText;

    // Update progress bar (max 1000 words for full bar)
    const progressPercent = Math.min(100, (wordCount / 1000) * 100);
    document.getElementById('wordProgress').style.width = progressPercent + '%';
}

function clearText() {
    document.getElementById('editor').value = '';
    analyzeText();
    document.getElementById('editor').focus();
}

function copyStats() {
    const wordCount = document.getElementById('wordCount').textContent;
    const charCount = document.getElementById('charCountSpaces').textContent;
    const sentences = document.getElementById('sentenceCount').textContent;
    const paragraphs = document.getElementById('paragraphCount').textContent;
    const readingTime = document.getElementById('readingTime').textContent;

    const stats = `Text Analytics:
📝 Words: ${wordCount}
📊 Characters: ${charCount}
📄 Sentences: ${sentences}
📋 Paragraphs: ${paragraphs}
⏱️ Reading Time: ${readingTime}

Generated by Yega's Text Analyzer Pro`;

    // Try modern clipboard API first, fallback to older method
    if (navigator.clipboard && navigator.clipboard.writeText) {
        navigator.clipboard.writeText(stats).then(() => {
            showCopyFeedback();
        }).catch(() => {
            fallbackCopyStats(stats);
        });
    } else {
        fallbackCopyStats(stats);
    }
}

function fallbackCopyStats(stats) {
    // Fallback method for older browsers
    const textArea = document.createElement('textarea');
    textArea.value = stats;
    textArea.style.position = 'fixed';
    textArea.style.left = '-999999px';
    textArea.style.top = '-999999px';
    document.body.appendChild(textArea);
    textArea.focus();
    textArea.select();

    try {
        document.execCommand('copy');
        showCopyFeedback();
    } catch (err) {
        console.error('Copy failed:', err);
        alert('Copy failed. Please try again.');
    }

    document.body.removeChild(textArea);
}

function showCopyFeedback() {
    const btn = document.getElementById('copyBtn');
    const originalText = btn.textContent;
    btn.textContent = '✓ Copied!';
    btn.classList.add('active');
    setTimeout(() => {
        btn.textContent = originalText;
        btn.classList.remove('active');
    }, 2000);
}

function toggleMode() {
    isDarkMode = !isDarkMode;
    const body = document.body;
    const btn = document.getElementById('darkModeBtn');

    if (isDarkMode) {
        body.style.filter = 'invert(1) hue-rotate(180deg)';
        btn.textContent = 'Light Mode';
        btn.classList.add('active');
    } else {
        body.style.filter = 'none';
        btn.textContent = 'Dark Mode';
        btn.classList.remove('active');
    }
}

// Initialize
analyzeText();

// Auto-focus on load
window.addEventListener('load', () => {
    document.getElementById('editor').focus();
});